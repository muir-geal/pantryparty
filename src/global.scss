/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "@ionic/angular/css/normalize.css";
@import "@ionic/angular/css/structure.css";
@import "@ionic/angular/css/typography.css";
@import "@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
@import "@ionic/angular/css/padding.css";
@import "@ionic/angular/css/float-elements.css";
@import "@ionic/angular/css/text-alignment.css";
@import "@ionic/angular/css/text-transformation.css";
@import "@ionic/angular/css/flex-utils.css";

/**
 * Ionic Dark Mode
 * -----------------------------------------------------
 * For more info, please see:
 * https://ionicframework.com/docs/theming/dark-mode
 */

 @import "@ionic/angular/css/palettes/dark.always.css";
/* @import "@ionic/angular/css/palettes/dark.class.css"; */
@import "@ionic/angular/css/palettes/dark.system.css";

/* My custom dark green theme */
/* @import "./theme/dark-green-theme.scss"; */


ion-button.md {
  text-transform: unset;
}

ion-card {
border-radius: 15px;
}

// Modal transparency for Capacitor MLKit barcode scanner
::ng-deep ion-modal {
  --background: transparent !important;
  background: transparent !important;
  
  .modal-wrapper {
    background: transparent !important;
    --ion-background-color: transparent !important;
    box-shadow: none !important;
  }
  
  .modal-content {
    background: transparent !important;
    --background: transparent !important;
  }
}

.barcode-modal {
  --background: transparent !important;
  background: transparent !important;
}

// Hide the modal backdrop to let native camera show through
::ng-deep .modal-backdrop {
  display: none !important;
  opacity: 0 !important;
}

// Ensure the page content is transparent when scanner is active
.barcode-scanner-active {
  background: transparent !important;
  
  ion-content {
    --background: transparent !important;
    background: transparent !important;
  }
  
  ion-modal {
    --background: transparent !important;
    background: transparent !important;
  }
}

// Scanner frame overlay (this should still work)
.scanner-frame {
  position: fixed;
  top: 50%;
  left: 50%;
  width: 250px;
  height: 250px;
  transform: translate(-50%, -50%);
  z-index: 10000;
  border: 2px solid white;
  pointer-events: none;
  
  &::before,
  &::after {
    content: '';
    position: absolute;
    width: 30px;
    height: 30px;
    border: 4px solid white;
  }
  
  &::before {
    top: 0;
    left: 0;
    border-right: none;
    border-bottom: none;
  }
  
  &::after {
    bottom: 0;
    right: 0;
    border-left: none;
    border-top: none;
  }
}

// Additional overlay elements you might have
.scanner-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 9999;
  background: transparent;
  pointer-events: none;
  
  .overlay-content {
    position: relative;
    width: 100%;
    height: 100%;
    pointer-events: auto;
  }
}

// Close button styling
.close-scanner-btn {
  position: fixed;
  top: 40px;
  right: 20px;
  z-index: 10001;
  background: rgba(0, 0, 0, 0.7);
  color: white;
  border: none;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}

// Instructions text
.scanner-instructions {
  position: fixed;
  bottom: 100px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 10001;
  background: rgba(0, 0, 0, 0.7);
  color: white;
  padding: 10px 20px;
  border-radius: 20px;
  text-align: center;
  pointer-events: none;
}

// Hide elements during scanning
.hidden-during-scan {
  display: none !important;
}

// Hide tab bar during scanning
.barcode-scanner-active {
  ion-tab-bar {
    display: none !important;
  }
  
  ion-header {
    display: none !important;
  }
}

// Flashlight toggle button
.flashlight-btn {
  position: fixed;
  top: 40px;
  left: 20px;
  z-index: 10001;
  background: rgba(0, 0, 0, 0.7);
  color: white;
  border: none;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}

.filter-button{
  --ion-text-color:red
}

@font-face {
    font-family: 'Montserrat';
    src: url('./assets/fonts/Montserrat-Light.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

:root {
  --ion-font-family: 'Montserrat', sans-serif;
}

ion-button {
  font-weight: 700;
  text-transform: none;
}

.food-actions {
  display: flex;
  justify-content: center;
  gap: 12px;
  margin-top: 16px;

  ion-button {
    --padding-start: 6px;
    --padding-end: 6px;
    --icon-size: 40px;
  }
}

:root {
  --ion-color-primary: #4a9b55;
  --ion-color-primary-rgb: 74, 155, 142;
  --ion-color-primary-contrast: #ffffff;
  --ion-color-primary-contrast-rgb: 255, 255, 255;
  --ion-color-primary-shade: #41887d;
  --ion-color-primary-tint: #5ca599;
  
  --ion-color-secondary: #6db65b;
  --ion-color-secondary-rgb: 109, 182, 91;
  --ion-color-secondary-contrast: #ffffff;
  --ion-color-secondary-contrast-rgb: 255, 255, 255;
  --ion-color-secondary-shade: #60a050;
  --ion-color-secondary-tint: #7cbd6b;
}

.green-glow {
  box-shadow: 0 0 10px rgba(74, 155, 142, 0.3);
}